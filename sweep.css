article {
  container-type: inline-size;
}
#minesweeper {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  aspect-ratio: 1;
  overflow: hidden;
  border: 2px solid #aaa;
  box-shadow: 0 0 3ex rgba(0, 0, 0, 0.2);
  align-items: center;

  label {
    background-color: #ccc;
    outline: 1px solid #aaa;
    cursor: pointer;
    aspect-ratio: 1;
    container-type: size;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;

    &:after {
      font-size: 50cqw;
    }

    &[data-mines-nearby="0"]:after {
      color: #666;
    }
    &[data-mines-nearby="1"]:after {
      color: rgb(0, 132, 255);
    }
    &[data-mines-nearby="2"]:after {
      color: rgb(0, 68, 255);
    }
    &[data-mines-nearby="3"]:after {
      color: rgb(76, 0, 255);
    }
    &[data-mines-nearby="4"]:after {
      color: rgb(153, 0, 255);
    }
    &[data-mines-nearby="5"]:after {
      color: rgb(225, 0, 255);
    }
    &[data-mines-nearby="6"]:after {
      color: rgb(255, 0, 149);
    }
    &[data-mines-nearby="7"]:after {
      color: rgb(255, 0, 0);
    }
    &[data-mines-nearby="8"]:after {
      color: maroon;
    }

    &:hover {
      background-color: #ddd;
    }

    &:has(input:indeterminate) {
      background-color: #ddd;
      &:after {
        content: " ";
      }
    }

    &:has(input.has-mine):after {
      _content: "ðŸ’£";
    }

    &:not(:has(input:indeterminate)) {
      background-color: #fff;
      &:after {
        content: "ðŸš©";
      }
    }

    &:not(:has(input:checked, input:indeterminate)) {
      background-color: #fff;
      &:has(input.has-mine):after {
        content: "ðŸ’¥";
      }
      &:has(input.empty):after {
        content: attr(data-mines-nearby);
      }
    }
  }
  input {
    display: none;
  }

  #you-win,
  #you-lose {
    position: absolute;
    text-align: center;
    width: calc(100% - 3ex);
    left: 1.5ex;
    box-shadow: 0 0 1ex rgba(0, 0, 0, 0.5);
    color: #fff;
    padding-bottom: 1ex;
    transition: all 0.5s;
    transform: translateY(150cqh);

    z-index: 1;
    p,
    h2 {
      margin: 0.3ex;
    }
    button {
      background-color: rgba(255, 255, 255, 0.75);
      border-radius: 1ex;
      padding: 0.5ex 1ex;
      border: none;
      color: #000;
      cursor: pointer;
      box-shadow: 0.2ex 0.2ex 0.5ex rgba(0, 0, 0, 0.5);
      &:active {
        box-shadow: 0.1ex 0.1ex 0.5ex rgba(0, 0, 0, 0.5);
        transform: translate(0.1ex, 0.1ex);
      }
    }
  }

  #you-lose {
    background-color: #f00;
  }

  #you-win {
    background-color: #080;
  }

  /*
    Losing condition: any mine unchecked and not indeterminate
  */
  &:has(.has-mine:not(:checked):not(:indeterminate)) {
    #you-lose {
      transform: translateY(0);
    }

    /* Reveal the minefield when you lose */
    label:has(.has-mine:indeterminate):after {
      content: "ðŸ’£";
    }
  }
  /*
  Winning condition
  */
  /* no flags on empties */
  &:has(input) {
    &:not(:has(.empty:checked)) {
      /* no mines are unchecked */
      &:not(:has(.has-mine:not(:checked))) {
        /*ie - all mines are flagged*/
        #you-win {
          transform: translateY(0);
        }
        /* reveal any numbered space */
        label:has(input.empty):after {
          content: attr(data-mines-nearby);
        }
      }
    }
  }
}
