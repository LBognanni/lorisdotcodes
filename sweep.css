article {
  container-type: inline-size;
}
#minesweeper {
  position: relative;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  aspect-ratio: 1;
  overflow: hidden;

  label {
    background-color: #ccc;
    border: 1px solid #aaa;
    cursor: pointer;
    aspect-ratio: 1;
    container-type: size;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;

    &:after {
      font-size: 50cqw;
    }

    &[data-mines-nearby="0"]:after {
      color: #666;
    }
    &[data-mines-nearby="1"]:after {
      color: rgb(0, 132, 255);
    }
    &[data-mines-nearby="2"]:after {
      color: rgb(0, 68, 255);
    }
    &[data-mines-nearby="3"]:after {
      color: rgb(76, 0, 255);
    }
    &[data-mines-nearby="4"]:after {
      color: rgb(153, 0, 255);
    }
    &[data-mines-nearby="5"]:after {
      color: rgb(225, 0, 255);
    }
    &[data-mines-nearby="6"]:after {
      color: rgb(255, 0, 149);
    }
    &[data-mines-nearby="7"]:after {
      color: rgb(255, 0, 0);
    }
    &[data-mines-nearby="8"]:after {
      color: maroon;
    }

    &:hover {
      background-color: #ddd;
    }

    &:has(+ :indeterminate) {
      background-color: #eee;
    }

    &:has(+ .has-mine):after {
      _content: "ðŸ’£";
    }

    &:has(+ :checked) {
      background-color: #fff;
      &:has(+ .has-mine):after {
        content: "ðŸ’¥";
      }
      &:has(+ .empty):after {
        content: attr(data-mines-nearby);
      }
    }

    &:has(+ :indeterminate):after {
      content: "ðŸš©";
    }
  }
  input {
    display: none;
  }

  #you-win, #you-lose {
    --height: 8em;

    position: absolute;
    text-align: center;
    height: var(--height);
    width: calc(100% - 3ex);
    left: 1.5ex;
    box-shadow: 0 0 1ex rgba(0,0,0,0.5);
    margin-top: calc(50% - calc(var(--height) / 2));
    top: 150%;
    color: #fff;
    transition: all 0.5s;
    z-index: 1;
  }

  #you-lose {
    --height: 8em;
    background-color: #f00;
  }

  #you-win {
    --height: 5em;
    background-color: #080;
  }

  /*
    Losing condition: any mine is checked
  */
  &:has(.has-mine:checked) {
    #you-lose {
      top: 0;
    }

    /* Reveal the minefield when you lose */
    label:has(+ .has-mine:not(:checked)):after {
      content: "ðŸ’£";
    }
  }

  /*
  Winning condition
  */
  /* no mines are not indeterminate (ie they're all flagged) */
  &:not(:has(.has-mine:not(:indeterminate))) {
    /* & all non-mine cells are checked */
    &:not(:has(.empty:not(:checked))) {
      #you-win {
        top: 0;
      }
    }
  }
}
